<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BenchmarkDotNet.Diagnostics.Windows</name>
    </assembly>
    <members>
        <member name="T:BenchmarkDotNet.Diagnostics.Windows.ConcurrencyVisualizerProfiler">
            <summary>
            a plugin which uses EtwProfiler to mimic the behavior of CVCollectionService.exe to produce not only an ETW trace file
            but also a CVTrace file which can be opened by Concurrency Visualizer plugin from Visual Studio
            </summary>
        </member>
        <member name="M:BenchmarkDotNet.Diagnostics.Windows.Configs.EtwProfilerAttribute.#ctor(System.Boolean,System.Int32)">
            <param name="performExtraBenchmarksRun">if set to true, benchmarks will be executed on more time with the profiler attached. If set to false, there will be no extra run but the results will contain overhead. True by default.</param>
            <param name="bufferSizeInMb">ETW session buffer size, in MB. 256 by default</param>
        </member>
        <member name="M:BenchmarkDotNet.Diagnostics.Windows.Configs.InliningDiagnoserAttribute.#ctor(System.Boolean,System.Boolean)">
            <param name="logFailuresOnly">only the methods that failed to get inlined. True by default.</param>
            <param name="filterByNamespace">only the methods from declaring type's namespace. Set to false if you want to see all Jit inlining events. True by default.</param>
        </member>
        <member name="M:BenchmarkDotNet.Diagnostics.Windows.Configs.TailCallDiagnoserAttribute.#ctor(System.Boolean,System.Boolean)">
            <param name="logFailuresOnly">only the methods that failed to get tail called. True by default.</param>
            <param name="filterByNamespace">only the methods from declaring type's namespace. Set to false if you want to see all Jit tail events. True by default.</param>
        </member>
        <member name="M:BenchmarkDotNet.Diagnostics.Windows.EtwDiagnoser`1.WaitForDelayedEvents">
            <summary>
            ETW real-time sessions receive events with a slight delay. Typically it
            shouldn't be more than a few seconds. This increases the likelihood that
            all relevant events are processed by the collection thread by the time we
            are done with the benchmark.
            </summary>
        </member>
        <member name="M:BenchmarkDotNet.Diagnostics.Windows.EtwProfiler.WaitForDelayedEvents">
            <summary>
            ETW sessions receive events with a slight delay.
            This increases the likelihood that all relevant events are processed by the collection thread by the time we are done with the benchmark.
            </summary>
        </member>
        <member name="M:BenchmarkDotNet.Diagnostics.Windows.EtwProfilerConfig.#ctor(System.Boolean,System.Int32,System.Single,Microsoft.Diagnostics.Tracing.Parsers.KernelTraceEventParser.Keywords,System.Collections.Generic.IReadOnlyDictionary{BenchmarkDotNet.Diagnosers.HardwareCounter,System.Func{Microsoft.Diagnostics.Tracing.Session.ProfileSourceInfo,System.Int32}},System.Collections.Generic.IReadOnlyCollection{System.ValueTuple{System.Guid,Microsoft.Diagnostics.Tracing.TraceEventLevel,System.UInt64,Microsoft.Diagnostics.Tracing.Session.TraceEventProviderOptions}},System.Boolean)">
            <param name="performExtraBenchmarksRun">if set to true, benchmarks will be executed one more time with the profiler attached. If set to false, there will be no extra run but the results will contain overhead. True by default.</param>
            <param name="bufferSizeInMb">ETW session buffer size, in MB. 256 by default</param>
            <param name="cpuSampleIntervalInMilliseconds">The rate at which CPU samples are collected. By default this is 1 (once a millisecond per CPU). There is a lower bound on this (typically 0.125 ms)</param>
            <param name="intervalSelectors">interval per hardware counter, if not provided then default values will be used.</param>
            <param name="kernelKeywords">kernel session keywords, ImageLoad (for native stack frames) and Profile (for CPU Stacks) are the defaults</param>
            <param name="providers">providers that should be enabled, if not provided then default values will be used</param>
            <param name="createHeapSession">value indicating whether to create heap session. False by default, used internally by NativeMemoryProfiler.</param>
        </member>
        <member name="M:BenchmarkDotNet.Diagnostics.Windows.InliningDiagnoser.#ctor(System.Boolean,System.Boolean)">
            <summary>
            creates new InliningDiagnoser
            </summary>
            <param name="logFailuresOnly">only the methods that failed to get inlined. True by default.</param>
            <param name="filterByNamespace">only the methods from declaring type's namespace. Set to false if you want to see all Jit inlining events. True by default.</param>
        </member>
        <member name="M:BenchmarkDotNet.Diagnostics.Windows.InliningDiagnoser.#ctor(System.Boolean,System.String[])">
            <summary>
            creates new InliningDiagnoser
            </summary>
            <param name="logFailuresOnly">only the methods that failed to get inlined. True by default.</param>
            <param name="allowedNamespaces">list of namespaces from which inlining message should be print.</param>
        </member>
        <member name="T:BenchmarkDotNet.Diagnostics.Windows.TailCallDiagnoser">
            <summary>
            See <see href="https://blogs.msdn.microsoft.com/clrcodegeneration/2009/05/11/jit-etw-tracing-in-net-framework-4/">MSDN blog post about JIT tracing events</see>
            and <see href="https://georgeplotnikov.github.io/articles/tale-tail-call-dotnet">detailed blog post by George Plotnikov</see> for more info
            </summary>
        </member>
        <member name="M:BenchmarkDotNet.Diagnostics.Windows.TailCallDiagnoser.#ctor(System.Boolean,System.Boolean)">
            <summary>
            creates the new TailCallDiagnoser instance
            </summary>
            <param name="logFailuresOnly">only the methods that failed to get tail called. True by default.</param>
            <param name="filterByNamespace">only the methods from declaring type's namespace. Set to false if you want to see all Jit tail events. True by default.</param>
        </member>
    </members>
</doc>
